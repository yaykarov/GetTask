{"version":3,"sources":["../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","pages/DeliveryCustomersPage.jsx","delivery_customers_page.js","utils/cookies.jsx"],"names":["Row","Col","DeliveryCustomersPage","props","fetchData","a","setState","fetching","url","URL","urls","data_url","window","location","fetch","headers","Headers","getCookie","response","ok","json","body","data","onConfirmClick","pk","confirmation_url","searchParams","set","method","table","rows","state","map","item","scans","i","components","push","href","target","length","type","full_name","email","phone","tax_number","reason_code","bank_name","legal_address","mail_address","className","theme","onClick","this","key","size","spinning","style","width","React","Component","ReactDOM","render","getPageProps","document","getElementById","name","matches","cookie","match","RegExp","replace","decodeURIComponent","undefined"],"mappings":"sGAAA,YACeA,MAAf,G,iCCDA,YACeC,MAAf,G,8NCSO,IAAMC,EAAb,mC,2bAAA,IACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,UAVmB,sBAUP,gCAAAC,EAAA,6DACR,EAAKC,SAAS,CAAEC,UAAU,IAEtBC,EAAM,IAAIC,IAAI,EAAKN,MAAMO,KAAKC,SAAUC,OAAOC,UAH3C,kBAMiBC,MACjBN,EACA,CACIO,QAAS,IAAIC,QAAQ,CACjB,cAAeC,YAAU,iBAVjC,YAMAC,EANA,QAeSC,GAfT,iCAgBmBD,EAASE,OAhB5B,OAgBMC,EAhBN,OAiBA,EAAKf,SAAS,CAAEgB,KAAMD,IAjBtB,kEAuBR,EAAKf,SAAS,CAAEC,UAAU,IAvBlB,0DAVO,EAoCnBgB,eApCmB,uCAoCF,WAAOC,GAAP,eAAAnB,EAAA,6DACTG,EAAM,IAAIC,IAAI,EAAKN,MAAMO,KAAKe,iBAAkBb,OAAOC,WACvDa,aAAaC,IAAI,KAAMH,GAFd,kBAKYV,MACjBN,EACA,CACIoB,OAAQ,OACRb,QAAS,IAAIC,QAAQ,CACjB,cAAeC,YAAU,iBAV5B,sEAkBb,EAAKb,YAlBQ,yDApCE,wDAyDnByB,MAAQ,WACJ,IAAIC,EAAO,EAAKC,MAAMT,KAAKU,KACvB,SAAAC,GACI,IAAIC,EAAQD,EAAKC,MAAMF,KACnB,SAACxB,EAAK2B,GACF,IAAIC,EAAa,GAOjB,OALAA,EAAWC,KAAK,uBAAGC,KAAM9B,EAAK+B,OAAQ,SAAtB,6BACZJ,EAAIF,EAAKC,MAAMM,OAAS,GACxBJ,EAAWC,KAAK,qCAGbD,KAMf,OAHoB,GAAhBF,EAAMM,SACNN,EAAQ,KAGR,4BACI,4BAAKD,EAAKQ,MACV,4BAAKR,EAAKS,WACV,4BAAKT,EAAKU,OACV,4BAAKV,EAAKW,OACV,4BAAKX,EAAKY,YACV,4BAAKZ,EAAKa,aACV,4BAAKb,EAAKc,WACV,4BAAKd,EAAKe,eACV,4BAAKf,EAAKgB,cACV,wBAAIC,UAAU,eAAehB,GAC7B,wBAAIgB,UAAU,eACV,kBAAC,IAAD,CACIT,KAAK,cACLU,MAAM,UACNC,QAAS,kBAAM,EAAK7B,eAAeU,EAAKT,YAQhE,OACI,2BACI0B,UAAU,8BAEV,+BACI,kDACA,gFACA,8DACA,0EACA,kDACA,kDACA,wDACA,4EACA,+GACA,8DACA,mGAEJ,+BACKpB,MAlHb,EAAKC,MAAQ,CACTT,KAAM,GAENf,UAAU,GANC,EADvB,gEA6HQ8C,KAAKjD,cA7Hb,+BAiIQ,OAAIiD,KAAKtB,MAAMxB,SAEP,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI+C,IAAI,UACJC,KAAK,QACLC,UAAU,EACVC,MAAO,CAAEC,MAAO,YAMzBL,KAAKxB,YA/IxB,GAA2C8B,IAAMC,WCNjDC,IAASC,OAAO,kBAAC,EAA0BlD,OAAOmD,gBAAmBC,SAASC,eAAe,U,gCCHtF,SAAShD,EAAUiD,GACtB,IAAIC,EAAUH,SAASI,OAAOC,MAAM,IAAIC,OACtC,WAAaJ,EAAKK,QAAQ,yBAA0B,QAAU,aAEhE,OAAOJ,EAAUK,mBAAmBL,EAAQ,SAAMM,EALtD,oC","file":"static/js/delivery_customers_page.6345a78c.chunk.js","sourcesContent":["import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import React from 'react';\n\nimport { Col } from 'antd';\nimport { Icon } from 'antd';\nimport { Row } from 'antd';\nimport { Spin } from 'antd';\n\nimport { getCookie } from '../utils/cookies.jsx';\n\n\nexport class DeliveryCustomersPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n\n            fetching: false\n        };\n    }\n\n    fetchData = async () => {\n        this.setState({ fetching: true });\n\n        let url = new URL(this.props.urls.data_url, window.location);\n\n        try {\n            let response = await fetch(\n                url,\n                {\n                    headers: new Headers({\n                        'X-CSRFToken': getCookie('csrftoken'),\n                    }),\n                }\n            );\n\n            if (response.ok) {\n                const body = await response.json();\n                this.setState({ data: body });\n            }\n        } catch (exception) {\n            // nothing to do\n        }\n\n        this.setState({ fetching: false });\n    }\n\n    onConfirmClick = async (pk) => {\n        let url = new URL(this.props.urls.confirmation_url, window.location);\n        url.searchParams.set('pk', pk);\n\n        try {\n            let response = await fetch(\n                url,\n                {\n                    method: 'POST',\n                    headers: new Headers({\n                        'X-CSRFToken': getCookie('csrftoken'),\n                    }),\n                }\n            );\n        } catch (exception) {\n            // nothing to do\n        }\n\n        this.fetchData();\n    }\n\n    table = () => {\n        let rows = this.state.data.map(\n            item => {\n                let scans = item.scans.map(\n                    (url, i) => {\n                        let components = [];\n\n                        components.push(<a href={url} target={'blank'}>скан</a>);\n                        if (i < item.scans.length - 1) {\n                            components.push(<span>, </span>);\n                        }\n\n                        return components;\n                    }\n                );\n                if (scans.length == 0) {\n                    scans = '-';\n                }\n                return (\n                    <tr>\n                        <td>{item.type}</td>\n                        <td>{item.full_name}</td>\n                        <td>{item.email}</td>\n                        <td>{item.phone}</td>\n                        <td>{item.tax_number}</td>\n                        <td>{item.reason_code}</td>\n                        <td>{item.bank_name}</td>\n                        <td>{item.legal_address}</td>\n                        <td>{item.mail_address}</td>\n                        <td className='text-center'>{scans}</td>\n                        <td className='text-center'>\n                            <Icon\n                                type='plus-square'\n                                theme='twoTone'\n                                onClick={() => this.onConfirmClick(item.pk)}\n                            />\n                        </td>\n                    </tr>\n                );\n            }\n        );\n\n        return (\n            <table\n                className='table table-hover rh-table'\n            >\n                <thead>\n                    <th>Тип</th>\n                    <th>Название</th>\n                    <th>Почта</th>\n                    <th>Телефон</th>\n                    <th>ИНН</th>\n                    <th>КПП</th>\n                    <th>Банк</th>\n                    <th>Юр. Адрес</th>\n                    <th>Почтовый Адрес</th>\n                    <th>Сканы</th>\n                    <th>Подтвердить</th>\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        );\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    render() {\n        if (this.state.fetching) {\n            return (\n                <Row>\n                    <Col>\n                        <Spin\n                            key='spinner'\n                            size='large'\n                            spinning={true}\n                            style={{ width: '100%'}}\n                        />\n                    </Col>\n                </Row>\n            );\n        } else {\n            return this.table();\n        }\n    }\n}\n\n\nexport default DeliveryCustomersPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DeliveryCustomersPage } from './pages/DeliveryCustomersPage.jsx';\n\nReactDOM.render(<DeliveryCustomersPage {...window.getPageProps()}/>, document.getElementById('root'));\n","// возвращает cookie если есть или undefined\nexport function getCookie(name) {\n    var matches = document.cookie.match(new RegExp(\n      \"(?:^|; )\" + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ))\n    return matches ? decodeURIComponent(matches[1]) : undefined\n}\n\n// уcтанавливает cookie\nexport function setCookie(name, value, props) {\n    props = props || {}\n\n    var exp = props.expires\n    if (typeof exp == \"number\" && exp) {\n        var d = new Date()\n        d.setTime(d.getTime() + exp*1000)\n        exp = props.expires = d\n    }\n\n    if (exp && exp.toUTCString) {\n        props.expires = exp.toUTCString()\n    }\n\n    value = encodeURIComponent(value)\n\n    var updatedCookie = name + \"=\" + value\n\n    for (var propName in props) {\n        updatedCookie += \"; \" + propName\n        var propValue = props[propName]\n        if(propValue !== true){ updatedCookie += \"=\" + propValue }\n    }\n\n    document.cookie = updatedCookie\n}\n\n// удаляет cookie\nexport function deleteCookie(name) {\n    setCookie(name, null, { expires: -1 })\n}\n"],"sourceRoot":""}