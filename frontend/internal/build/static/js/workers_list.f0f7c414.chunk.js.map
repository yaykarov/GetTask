{"version":3,"sources":["components/ColumnsFilter.jsx","components/DataTable.jsx","components/WorkersTable.jsx","pages/WorkersList.jsx","workers_list.js"],"names":["ColumnsForm","fields","this","props","columns","forEach","field","push","Item","key","data","name","style","marginBottom","form","getFieldDecorator","valuePropName","initialValue","checked","rules","type","disabled","required","undefined","title","React","Component","WrappedColumnsForm","Form","create","ColumnsFilter","onSetupClick","setState","modal_visible","onModalOk","current","validateFieldsAndScroll","errors","values","onFilterUpdate","onModalCancel","createRef","state","onClick","visible","onOk","onCancel","ref","$","require","DataTable","lastTableId","wrapperClass","tableId","selectAllCheckboxId","checkboxClass","getTableId","dataTable","result","slice","enable_checkboxes","unshift","processData","json","data_process","i","length","checkbox","pk","has","String","dataTableParams","ajax","url","data_url","data_extra","dataSrc","params","dom","serverSide","fixedHeader","header","footer","processing","lengthMenu","orderCellsTop","sPaginationType","oLanguage","columnDefs","orderable","targets","order","initDataTable","document","on","prop","trigger","table","add","value","delete","Set","destroy","nextProps","JSON","stringify","clear","html","id","className","WorkersTable","worker_data","full_name","edit_url","urls","worker_edit_url_template","replace","details_url","worker_details_url_template","worker","workers_list_dt_url","WorkersList","href","new_worker_url","target","marginLeft","filter","item","ReactDOM","render","window","getPageProps","getElementById"],"mappings":"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","file":"static/js/workers_list.f0f7c414.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Button } from 'antd';\nimport { Checkbox } from 'antd';\nimport { Form } from 'antd';\nimport { Modal } from 'antd';\n\n\nclass ColumnsForm extends React.Component {\n    render() {\n        let fields = [];\n        this.props.columns.forEach(\n            field => {\n                fields.push(\n                    <Form.Item\n                        key={field.data}\n                        name={field.data}\n                        style={{ marginBottom: 0}}\n                    >\n                        {\n                            this.props.form.getFieldDecorator(\n                                field.data,\n                                {\n                                    valuePropName: 'checked',\n                                    initialValue: field.checked,\n                                    rules: [{\n                                        type: 'boolean',\n                                    }],\n                                }\n                            )(\n                                <Checkbox\n                                    disabled={field.required? true : undefined}\n                                >\n                                    {field.title}\n                                </Checkbox>\n                            )\n                        }\n                    </Form.Item>\n                );\n            }\n        );\n        return (\n            <Form>\n                {fields}\n            </Form>\n        )\n    }\n}\n\n\nconst WrappedColumnsForm = Form.create()(ColumnsForm);\n\n\nexport class ColumnsFilter extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.form = React.createRef();\n\n        this.state = {\n            modal_visible: false\n        };\n    }\n\n    onSetupClick = () => {\n        this.setState({ modal_visible: true});\n    }\n\n    onModalOk = () => {\n        this.form.current.validateFieldsAndScroll(\n            (errors, values) => {\n                if (errors) {\n                    return;\n                }\n\n                this.setState({ modal_visible: false});\n\n                this.props.onFilterUpdate(values);\n            }\n        )\n    }\n\n    onModalCancel = () => {\n        this.setState({ modal_visible: false});\n    }\n\n    render() {\n        return [\n            (\n                <Button\n                    key='button'\n                    onClick={this.onSetupClick}\n                >\n                    Настроить столбцы\n                </Button>\n            ),\n            (\n                <Modal\n                    key='modal'\n                    visible={this.state.modal_visible}\n                    title='Выбор столбцов'\n\n                    onOk={this.onModalOk}\n                    onCancel={this.onModalCancel}\n                >\n                    <WrappedColumnsForm\n                        ref={this.form}\n                        columns={this.props.columns}\n                    />\n                </Modal>\n            )\n        ];\n    }\n}\n\n","import React from 'react';\n\nimport 'datatables.net-dt/css/jquery.dataTables.css';\nimport 'datatables.net-bs4/css/dataTables.bootstrap4.css';\nimport 'datatables.net-bs4';\n\nimport './DataTable.css';\n\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\n\nlet lastTableId = 0;\n\nfunction getTableId() {\n    const tableId = lastTableId;\n    lastTableId += 1;\n    return tableId;\n}\n\n\nexport class DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.checked = new Set();\n\n        this.tableId = getTableId();\n    }\n\n    wrapperClass = () => {\n        return 'data-table-wrapper-' + this.tableId;\n    }\n\n    selectAllCheckboxId = () => {\n        return 'datatable-' + this.tableId + '-select-all';\n    }\n\n    checkboxClass = () => {\n        return 'datatable-' + this.tableId + '-selection';\n    }\n\n    getTableId = () => {\n        return 'id_datatable_' + this.tableId;\n    }\n\n    dataTable = () => {\n        return $('#' + this.getTableId());\n    }\n\n    columns = (props) => {\n        let result = props.columns.slice();\n        if (props.enable_checkboxes) {\n            result.unshift(\n                {\n                    'title': (\n                        '<input type=\"checkbox\" id=\"' +\n                        this.selectAllCheckboxId() + \n                        '\">'\n                    ),\n                    'data': 'checkbox',\n                }\n            );\n        }\n\n        return result;\n    }\n\n    processData = (props, json) => {\n        let data;\n        if (props.data_process) {\n            data = props.data_process(json);\n        } else {\n            data = json.data;\n        }\n\n        if (props.enable_checkboxes) {\n            for (let i = 0; i < data.length; ++i) {\n                data[i].checkbox = (\n                    '<input type=\"checkbox\" class=\"' + \n                    this.checkboxClass() +\n                    '\" id=\"datatable-' + this.tableId + '-checkbox-' + data[i].pk +\n                    '\" name=\"id\" value=\"' + data[i].pk + '\"' +\n                    (this.checked.has(String(data[i].pk))? ' checked=\"true\" ' : '') +\n                    '>'\n                );\n            }\n        }\n\n        return data;\n    }\n\n    dataTableParams = (props) => {\n        let ajax = {\n            url: props.data_url,\n            data: props.data_extra,\n            dataSrc: (json) => { return this.processData(props, json); }\n        };\n\n        let params = {\n            dom: '<\"' + this.wrapperClass() + '\"lftipr>',\n            columns: this.columns(props),\n            serverSide: true,\n            ajax: ajax,\n\n            fixedHeader: {\n                header: true,\n                footer: true\n            },\n            processing: true,\n            lengthMenu: [[20, 100, 200], [20, 100, 200]],\n            orderCellsTop: true,\n            sPaginationType: 'full_numbers',\n            oLanguage: {\n                'sLengthMenu': 'Отображено _MENU_ записей на страницу',\n                'sSearch': 'Поиск:',\n                'sZeroRecords': 'Ничего не найдено - извините',\n                'sInfo': 'Показано с _START_ по _END_ из _TOTAL_ записей',\n                'sInfoEmpty': 'Показано с 0 по 0 из 0 записей',\n                'sInfoFiltered': '(filtered from _MAX_ total records)',\n                'oPaginate': {\n                    'sFirst': 'Первая',\n                    'sNext':'>',\n                    'sPrevious':'<',\n                    'sLast':'Последняя',\n                }\n            },\n        };\n\n        if (props.enable_checkboxes) {\n            params.columnDefs = [{\n                orderable: false,\n                targets: 0\n            }];\n            params.order = [[1, 'asc']];\n        }\n\n        return params;\n    }\n\n    initDataTable = (props) => {\n        this.dataTable().DataTable(this.dataTableParams(props));\n\n        const checkboxClass = '.' + this.checkboxClass();\n        $(document).on(\n            'click',\n            '#' + this.selectAllCheckboxId(),\n            function() {\n                $(checkboxClass).prop('checked', this.checked).trigger('change');\n            }\n        );\n\n        let table = this;\n        $(document).on(\n            'change',\n            checkboxClass,\n            function() {\n                if (this.checked) {\n                    table.checked.add(this.value);\n                } else {\n                    table.checked.delete(this.value);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        this.initDataTable(this.props);\n    }\n\n    componentWillUnmount() {\n        this.dataTable().DataTable().destroy();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (JSON.stringify(this.props) !== JSON.stringify(nextProps)) {\n            this.dataTable().DataTable().clear();\n            this.dataTable().DataTable().destroy();\n            this.dataTable().html('');\n\n            this.initDataTable(nextProps);\n        }\n\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <table\n                    id={this.getTableId()}\n                    className='table table-hover rh-table'\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { DataTable } from './DataTable.jsx';\n\n\n// Todo: merge with WorkersList?\nexport class WorkersTable extends React.Component {\n    processData = (json) => {\n        let data = json.data;\n        for (let i = 0; i < data.length; ++i) {\n            const pk = data[i].worker_data.pk;\n            const name = data[i].worker_data.full_name;\n            const edit_url = this.props.urls.worker_edit_url_template.replace('12345', pk);\n            const details_url = this.props.urls.worker_details_url_template.replace('12345', pk);\n            data[i].worker = (\n                '<a href=\"' + edit_url + '\" target=\"_blank\"><i class=\"far fa-edit\"></i></a>' +\n                '<span style=\"margin-left: 16px;\"> </span>' +\n                '<a href=\"' + details_url + '\" target=\"_blank\">' + name + '</a>'\n            );\n        }\n        return data;\n    }\n\n    render() {\n        return (\n            <DataTable\n                columns={this.props.columns}\n                data_url={this.props.urls.workers_list_dt_url}\n                data_process={this.processData}\n            />\n        );\n    }\n}\n","import React from 'react';\n\nimport { Button } from 'antd';\n\nimport { ColumnsFilter } from '../components/ColumnsFilter.jsx';\nimport { WorkersTable } from '../components/WorkersTable.jsx';\n\nimport '../components/Common.css';\n\n\nexport class WorkersList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const columns_initial = [\n            {\n                title: 'Дата занесения',\n                data: 'input_date',\n                checked: true,\n            },\n            {\n                title: 'ФИО',\n                data: 'worker',\n                checked: true,\n                required: true,\n            },\n            {\n                title: 'Гражданство',\n                data: 'citizenship',\n                checked: true,\n            },\n            {\n                title: 'Дата окончания МК',\n                data: 'm_date_of_exp',\n                checked: false,\n            },\n            {\n                title: 'Серия МК',\n                data: 'mig_series',\n                checked: false,\n            },\n            {\n                title: 'Номер МК',\n                data: 'mig_number',\n                checked: false,\n            },\n            {\n                title: 'Должность',\n                data: 'position',\n                checked: true,\n            },\n            {\n                title: 'Дата посл. выхода',\n                data: 'last_turnout_date',\n                checked: false,\n            },\n            {\n                title: 'Посл. выход на',\n                data: 'last_turnout_customer',\n                checked: false,\n            },\n            {\n                title: 'Кол-во выходов',\n                data: 'turnouts_count',\n                checked: true,\n            },\n            {\n                title: 'Кол-во договоров',\n                data: 'contracts_count',\n                checked: true,\n            },\n            {\n                title: 'Телефон',\n                data: 'tel_number',\n                checked: true,\n            }\n        ];\n\n        this.state = {\n            columns: columns_initial\n        };\n    }\n\n    onFilterUpdate = (values) => {\n        this.setState(\n            state => {\n                for (let i = 0; i < state.columns.length; ++i) {\n                    state.columns[i].checked = values[state.columns[i].data];\n                }\n\n                return state;\n            }\n        );\n    }\n\n    render() {\n        return [\n            (\n                <h\n                    className='rh-header'\n                >\n                    Физ. лица\n                </h>\n            ),\n            (\n                <ColumnsFilter\n                    columns={this.state.columns}\n                    onFilterUpdate={this.onFilterUpdate}\n                />\n            ),\n            (\n                <Button\n                    href={this.props.urls.new_worker_url}\n                    target='_blank'\n                    style={{ marginLeft: '20px' }}\n                >\n                    Добавить рабочего\n                </Button>\n            ),\n            (\n                <WorkersTable\n                    columns={this.state.columns.filter(item => item.checked)}\n                    urls={this.props.urls}\n                />\n            )\n        ];\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { WorkersList } from './pages/WorkersList.jsx';\n\nReactDOM.render(<WorkersList {...window.getPageProps()}/>, document.getElementById('root'));\n"],"sourceRoot":""}